When would you want to use a remote repository rather than keeping all your work local?
When I work on a team project; when I need a backup of my work anytime from anywhere.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Because I might be working on something, and any automatic changes may cause disturbances in my own code.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Branches exist within one repository. Forks and clones each represent copies of repositories. Clones could be local and remote copies. However, forks exist only on GitHub.
If there is a repository on GitHub that I am interested to work on, but I don't want to change the original repository, and I have an account on GitHub, then I can fork that repository.
If I want to experiment with my new repository, without affecting the official version from the GitHub, I would clone it to my computer.
If I want to add a new feature to my project/repository, I would create a new branch. 

What is the benefit of having a copy of the last known state of the remote stored locally?
In case if we'll be offline for some time, like in an airplane, we'll have the copy of the most up-to-date state of the remote stored locally, and the changes we'll make to the project will be more incremental than cumulative.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Through directories/files version system. It seems that many things will just get harder. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When I want to experiment on something, add a new feature. Making changes on a separate branch is more secure when you are experimenting. However, making changes on master is quicker and reasonable when they are small.